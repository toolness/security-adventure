--- app-vulnerable.js	2013-09-25 00:52:26.000000000 -0400
+++ app.js	2013-09-25 01:04:14.000000000 -0400
@@ -10,8 +10,12 @@
 var views = {
   401: function() { return 'You must <a href="/">log in</a> first.'; },
   404: function() { return "Alas, this is a 404."; },
+  _csrf: function(req) {
+    return '  <input type="hidden" name="csrfToken" value="' +
+           req.session.csrfToken + '">';
+  },
   login: function(req) { return [
-    '<form method="post" action="/login">',
+    '<form method="post" action="/login">', this._csrf(req),
     '  username: <input type="text" name="username" required>',
     '  password: <input type="password" name="password" required>',
     '  <button type="submit" name="action" value="login">Login</button>',
@@ -20,10 +24,10 @@
     '</form>'
   ].join('\n'); },
   notes: function(req, notes) { return [
-    '<form method="post" action="/logout">',
+    '<form method="post" action="/logout">', this._csrf(req),
     '  <input type="submit" value="Logout ' + req.session.user + '">',
     '</form>',
-    '<form method="post">',
+    '<form method="post">', this._csrf(req),
     '  <textarea cols="80" rows="20" name="notes">' + notes + '</textarea>',
     '  <input type="submit" value="Update Notes">',
     '</form>'
@@ -59,6 +63,11 @@
 
 var routes = {
   'GET /': function showLoginFormOrUserNotes(req, res) {
+    if (!req.session.csrfToken) {
+      req.session.csrfToken = require('crypto').randomBytes(36).toString('base64');
+      res.setHeader("Set-Cookie", sessionCookie.serialize(req.session));
+    }
+
     if (req.query.msg)
       res.write('<hr><em>' + Buffer(req.query.msg, 'hex') + '</em><hr>\n');
     if (!req.session.user)
@@ -145,6 +154,9 @@
     req.on('end', function() {
       var data = Buffer.concat(bodyChunks).toString();
       req.body = querystring.parse(data);
+      if (!(req.body.csrfToken && req.session.csrfToken &&
+            req.body.csrfToken == req.session.csrfToken))
+        return next(403);
       route(req, res, next);
     });
   } else route(req, res, next);
